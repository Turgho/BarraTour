services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest  # Usar latest para garantir sqlcmd
    container_name: barra-tour-sql
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pidof sqlservr || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    restart: unless-stopped

  redis:
    image: redis:8.2.1-alpine
    container_name: barra-tour-redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass $${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: barra-tour-api:dev
    container_name: barra-tour-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=BarraTourDb;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD},abortConnect=false
      - Jwt__SecretKey=${JWT_SECRET_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Jwt__ExpiryInMinutes=${JWT_EXPIRY_IN_MINUTES}
      - DOTNET_USE_POLLING_FILE_WATCHER=1  # hot reload
      - ASPNETCORE_URLS=http://0.0.0.0:80
    ports:
      - "5078:80"
    volumes:
      - .:/app  # Monta o c√≥digo fonte para hot reload
      - ~/.nuget/packages:/root/.nuget/packages  # Cache de pacotes NuGet
      - aspnet_data_protection_keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  sql_data:
  redis_data:
  aspnet_data_protection_keys: